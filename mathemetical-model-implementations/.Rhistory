maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[j,i] <- ((CSVDataMatrix[j,i]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
print(scaledCsvDataMatrix)
}
return(scaledCsvDataMatrix)
}
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[j,i] <- ((CSVDataMatrix[j,i]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
print(scaledCsvDataMatrix)
}
return(scaledCsvDataMatrix)
}
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
CSVDataMatrix[0,2]
CSVDataMatrix[1,2]
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[j,i] <- ((CSVDataMatrix[j,i]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
print(scaledCsvDataMatrix)
}
return(scaledCsvDataMatrix)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
CSVDataMatrix[3,2]
CSVDataMatrix[3]
CSVDataMatrix[1,3]
CSVDataMatrix[0,3]
CSVDataMatrix[1,3]
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
print(scaledCsvDataMatrix)
}
return(scaledCsvDataMatrix)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
View(scaledCsvDataMatrix)
CSVDataMatrix[1,3]
CSVDataMatrix[3]
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
}
return(scaledCsvDataMatrix)
}
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVarience <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j)))
}
varArray[j] <- sum/numOfSamples
}
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
}
return(scaledCsvDataMatrix)
}
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
#calculating the variance of each of the feature vectors
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
}
return(scaledCsvDataMatrix)
}
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col, numOfSamples){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
#calculating the variance of each of the feature vectors
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col, numOfSamples){
sum <- 0
for(i in 1:numOfSamples){
sum < sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
}
return(scaledCsvDataMatrix)
}
#Funtion to get mean of a vector
getMean <- funtion(scaledCsvDataMatrix, col, numOfSamples){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
#calculating the variance of each of the feature vectors
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
#This Program is for feature selection
#Author - Prithviraj Chaudhuri
#Loading Libraries
#library("entropy")
#Function to read Data
readData <- function(NMIfilename, isHeader){
data <- read.table(NMIfilename, header=isHeader)
return(data)
}
#Function to get MI from CSV Data
#getNMI <- funtion(CSVDataMatrix){
#  NMIDataMatrix <- makemim(CSVDataMatrix)
#  return(NMIDataMatrix)
#}
#function to scale the CSV Data
scaleing <- function(CSVDataMatrix, numOfNodes, numOfSamples){
minScaledVal <- 0
maxScaledVal <- 1
minVal <- 0
maxVal <- 0
scaledCsvDataMatrix <- matrix( c(0), nrow = numOfSamples, ncol = numOfNodes)
for(j in 1:numOfNodes){
minVal <- sapply(CSVDataMatrix[j], min, na.rm = TRUE)
maxVal <- sapply(CSVDataMatrix[j], max, na.rm = TRUE)
for(i in 1:numOfSamples){
scaledCsvDataMatrix[i,j] <- ((CSVDataMatrix[i,j]-minVal)/(maxVal-minVal))*(maxScaledVal-minScaledVal)+minScaledVal
}
}
return(scaledCsvDataMatrix)
}
#Funtion to get mean of a vector
getMean <- function(scaledCsvDataMatrix, col, numOfSamples){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + scaledCsvDataMatrix[i,col]
}
mean <- sum/numOfSamples
return(mean)
}
#Function to calculate the variance of the scaled matrix
getVariance <- function(scaledCsvDataMatrix, numOfNodes, numOfSamples){
varArray <- matrix( c(0), nrow = 1, ncol = numOfNodes)
for(j in 1:numOfNodes){
sum <- 0
for(i in 1:numOfSamples){
sum <- sum + ((scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples))*(scaledCsvDataMatrix[i,j]-getMean(scaledCsvDataMatrix, j, numOfSamples)))
}
varArray[j] <- sum/numOfSamples
}
return(varArray)
}
#Exectution of the code
#reading the data
NMIDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.mi", FALSE)
CSVDataMatrix <- readData("C:\\Users\\prithviraj\\Desktop\\final-year-project\\test-data\\test.feature", TRUE)
#creating the MI
#NMIDataMatrix <- getNMI(CSVDataMatrix)
#setting number of nodes || features
numOfNodes <- ncol(CSVDataMatrix)
numOfSamples <- nrow(CSVDataMatrix)
#scaled csv data matrix
scaledCsvDataMatrix <- scaleing(CSVDataMatrix, numOfNodes, numOfSamples)
#calculating the variance of each of the feature vectors
varArray <- getVariance(scaledCsvDataMatrix, numOfNodes, numOfSamples)
View(varArray)
View(scaledCsvDataMatrix)
View(NMIDataMatrix)
View(CSVDataMatrix)
a <-1
print("a = "a)
print("a = "a)
print("a = "+a)
print("a = ",a)
print("a = ".a)
print("a = "|a)
print("a = "||a)
sprintf("a = %d",a)
v<-1
sprintf("%d",(a==v))
sprintf("%d",(a!=v))
clear
clc
cls
clc()
